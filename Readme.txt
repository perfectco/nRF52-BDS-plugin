Readme for Nordic Semiconductor plugin for Bluetooth Developer Studio (BDS)
-------------------------------------------------------------------------------------------------------------

The contents of this file are applicable to the following software versions:
* Bluetooth Developer Studio:       v1.1.3139.0 or newer
* Nordic Semiconductor BDS Plugin:  v1.3.0
* Nordic Semiconductor SDK:         v14.0.0


Usage
----------------------------
All the files generated by the plugin should be copied into the SDK experimental BDS template project folder,
replacing the placeholder files that are already there. Template project is located at:
"examples\ble_peripheral\experimental\bluetoothds_template". Generated code files must be added to the project
in the IDE or the Makefile.

Generated files should be used as starting point for creating a new application. They can be modified to customize
and extend the application. To simplify this process comments with YOUR_JOB tag are placed in the files.
You can search for all YOUR_JOB occurrences in files and follow instructions from these comments.
<% if (vsUUIDCounter > 0) { %>
Your profile uses some 128-bit UUIDs. Please change NRF_SDH_BLE_VS_UUID_COUNT in "sdk_config.h" file to <% print(vsUUIDCounter); %>
and adjust memory start address and size in project files. You can find more details on infocenter.nordicsemi.com
in section "SoftDevice memory usage" from SoftDevice Specification.
<% } %>
You have to call bluetooth_on_ble_evt() function from your Application's BLE Stack events handler. Handler is
located in "main.c" file in template project. Handler's name is "ble_evt_handler".


Header file generation
----------------------------
Data structures like structs and enums are generated in the header file by iterating through all levels of
Profile members, specifically Services -> Characteristics -> Fields -> Bits/Enumerations.

Header file code generation for services is highly dependent upon the properties of each Characteristic. 
If for instance the characteristic has the Read property set to "Mandatory", the service and service_init 
struct will have a member called "is_read_supported". The same applies to other properties, such as 
Notify and Indicate.

Set and Send functions are also generated for each characteristic depending on the properties mentioned above.
If a characteristic's Read property is set to anything but Excluded, a Set function definition will be 
generated for that characteristic. If a characteristic's Notify or Indicate properties are set to anything 
but Excluded, a Send function definition will be generated for the characteristic.


Code file generation
----------------------------
Code file code generation for services is equally dependent upon the properties of each Characteristic.

Encode and decode functions are created as necessary for each characteristic and its fields (structs and enums).
If a characteristic's Read, Notify or Indicate properties are set to anything but Excluded, an Encode function
will be generated for that characteristic and appropriate fields. If a characteristic's Write or WriteWithoutResponse 
properties are set to anything but Excluded, a Decode function will be generated for that characteristic and
appropriate fields.

The code will also have an on_write function, the contents of which are dependent upon the properties of each of 
the service's characteristics. If Notify or Indicate is supported by the characteristic, the on_write function will
have a code block for handling CCCD events. If Write or WriteWithoutResponse is supported by the characteristic, 
the on_write function will have a code block for handling value handles events. For Write and WriteWithoutResponse
a code block for handling value handle write events will be generated in the on_rw_authorize_request function.

In the service_init function, if a characteristic's Read, Notify or Indicate properties are supported, code for
initializing and adding the characteristic will be generated.

Matching the code generated in the header file, if a characteristic's Read property is supported, its Set function
implementation will be generated. If a characteristic's Notify or Indicate properties are supported, its Send
function implementation will be generated.


Licence
----------------------------
Copyright (c) 2017, Nordic Semiconductor ASA

All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form, except as embedded into a Nordic
   Semiconductor ASA integrated circuit in a product or a software update for
   such product, must reproduce the above copyright notice, this list of
   conditions and the following disclaimer in the documentation and/or other
   materials provided with the distribution.

3. Neither the name of Nordic Semiconductor ASA nor the names of its
   contributors may be used to endorse or promote products derived from this
   software without specific prior written permission.

4. This software, with or without modification, must only be used with a
   Nordic Semiconductor ASA integrated circuit.

5. Any software provided in binary form under this license must not be reverse
   engineered, decompiled, modified and/or disassembled.

THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

